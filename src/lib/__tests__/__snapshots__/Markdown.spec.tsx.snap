// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Blockquotes Blockquote 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "> Dorothy followed her through many of the beautiful rooms in her castle.",
        "text": "Dorothy followed her through many of the beautiful rooms in her castle.",
        "tokens": [
          {
            "raw": "Dorothy followed her through many of the beautiful rooms in her castle.",
            "text": "Dorothy followed her through many of the beautiful rooms in her castle.",
            "tokens": [
              {
                "raw": "Dorothy followed her through many of the beautiful rooms in her castle.",
                "text": "Dorothy followed her through many of the beautiful rooms in her castle.",
                "type": "text",
              },
            ],
            "type": "paragraph",
          },
        ],
        "type": "blockquote",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "borderLeftColor": "#d0d7de",
            "borderLeftWidth": 4,
            "opacity": 0.8,
            "paddingLeft": 16,
          }
        }
      >
        <View
          style={
            {
              "color": "#333333",
              "fontSize": 16,
              "lineHeight": 24,
              "paddingVertical": 8,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Dorothy followed her through many of the beautiful rooms in her castle.
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Blockquotes Blockquotes with Multiple Paragraphs 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "> Dorothy followed her through many of the beautiful rooms in her castle.
>
> The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.",
        "text": "Dorothy followed her through many of the beautiful rooms in her castle.

The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.",
        "tokens": [
          {
            "raw": "Dorothy followed her through many of the beautiful rooms in her castle.",
            "text": "Dorothy followed her through many of the beautiful rooms in her castle.",
            "tokens": [
              {
                "raw": "Dorothy followed her through many of the beautiful rooms in her castle.",
                "text": "Dorothy followed her through many of the beautiful rooms in her castle.",
                "type": "text",
              },
            ],
            "type": "paragraph",
          },
          {
            "raw": "

",
            "type": "space",
          },
          {
            "raw": "The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.",
            "text": "The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.",
            "tokens": [
              {
                "raw": "The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.",
                "text": "The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.",
                "type": "text",
              },
            ],
            "type": "paragraph",
          },
        ],
        "type": "blockquote",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "borderLeftColor": "#d0d7de",
            "borderLeftWidth": 4,
            "opacity": 0.8,
            "paddingLeft": 16,
          }
        }
      >
        <View
          style={
            {
              "color": "#333333",
              "fontSize": 16,
              "lineHeight": 24,
              "paddingVertical": 8,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Dorothy followed her through many of the beautiful rooms in her castle.
            </Text>
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "fontSize": 16,
              "lineHeight": 24,
              "paddingVertical": 8,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Blockquotes Blockquotes with Other Elements 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "> #### The quarterly results look great!
>
> - Revenue was off the chart.
> - Profits were higher than ever.
>
>  *Everything* is going according to **plan**.",
        "text": "#### The quarterly results look great!

- Revenue was off the chart.
- Profits were higher than ever.

 *Everything* is going according to **plan**.",
        "tokens": [
          {
            "depth": 4,
            "raw": "#### The quarterly results look great!

",
            "text": "The quarterly results look great!",
            "tokens": [
              {
                "raw": "The quarterly results look great!",
                "text": "The quarterly results look great!",
                "type": "text",
              },
            ],
            "type": "heading",
          },
          {
            "items": [
              {
                "checked": undefined,
                "loose": false,
                "raw": "- Revenue was off the chart.
",
                "task": false,
                "text": "Revenue was off the chart.",
                "tokens": [
                  {
                    "raw": "Revenue was off the chart.",
                    "text": "Revenue was off the chart.",
                    "tokens": [
                      {
                        "raw": "Revenue was off the chart.",
                        "text": "Revenue was off the chart.",
                        "type": "text",
                      },
                    ],
                    "type": "text",
                  },
                ],
                "type": "list_item",
              },
              {
                "checked": undefined,
                "loose": false,
                "raw": "- Profits were higher than ever.",
                "task": false,
                "text": "Profits were higher than ever.",
                "tokens": [
                  {
                    "raw": "Profits were higher than ever.",
                    "text": "Profits were higher than ever.",
                    "tokens": [
                      {
                        "raw": "Profits were higher than ever.",
                        "text": "Profits were higher than ever.",
                        "type": "text",
                      },
                    ],
                    "type": "text",
                  },
                ],
                "type": "list_item",
              },
            ],
            "loose": false,
            "ordered": false,
            "raw": "- Revenue was off the chart.
- Profits were higher than ever.",
            "start": "",
            "type": "list",
          },
          {
            "raw": "

",
            "type": "space",
          },
          {
            "raw": " *Everything* is going according to **plan**.",
            "text": " *Everything* is going according to **plan**.",
            "tokens": [
              {
                "raw": " ",
                "text": " ",
                "type": "text",
              },
              {
                "raw": "*Everything*",
                "text": "Everything",
                "tokens": [
                  {
                    "raw": "Everything",
                    "text": "Everything",
                    "type": "text",
                  },
                ],
                "type": "em",
              },
              {
                "raw": " is going according to ",
                "text": " is going according to ",
                "type": "text",
              },
              {
                "raw": "**plan**",
                "text": "plan",
                "tokens": [
                  {
                    "raw": "plan",
                    "text": "plan",
                    "type": "text",
                  },
                ],
                "type": "strong",
              },
              {
                "raw": ".",
                "text": ".",
                "type": "text",
              },
            ],
            "type": "paragraph",
          },
        ],
        "type": "blockquote",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "borderLeftColor": "#d0d7de",
            "borderLeftWidth": 4,
            "opacity": 0.8,
            "paddingLeft": 16,
          }
        }
      >
        <Text
          selectable={true}
          style={
            {
              "color": "#333333",
              "fontSize": 22,
              "fontWeight": "500",
              "lineHeight": 28,
              "marginVertical": 4,
            }
          }
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 22,
                "fontWeight": "500",
                "lineHeight": 28,
                "marginVertical": 4,
              }
            }
          >
            The quarterly results look great!
          </Text>
        </Text>
        <View
          style={
            [
              {
                "alignSelf": "stretch",
                "flexDirection": "row",
                "flexWrap": "nowrap",
              },
              undefined,
            ]
          }
          testID="marked-list-item"
        >
          <View>
            <Text
              style={
                [
                  {
                    "alignSelf": "flex-end",
                    "color": "#333333",
                    "flexGrow": 0,
                    "flexShrink": 1,
                    "fontSize": 16,
                    "lineHeight": 24,
                    "textAlign": "right",
                  },
                  {
                    "width": 19.2,
                  },
                ]
              }
              testID="marker-box"
            >
              • 
            </Text>
          </View>
          <View
            style={
              {
                "color": "#333333",
                "flexShrink": 1,
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            <Text
              selectable={true}
              style={{}}
            >
              <Text
                selectable={true}
                style={
                  {
                    "color": "#333333",
                    "fontSize": 16,
                    "lineHeight": 24,
                  }
                }
              >
                Revenue was off the chart.
              </Text>
            </Text>
          </View>
        </View>
        <View
          style={
            [
              {
                "alignSelf": "stretch",
                "flexDirection": "row",
                "flexWrap": "nowrap",
              },
              undefined,
            ]
          }
          testID="marked-list-item"
        >
          <View>
            <Text
              style={
                [
                  {
                    "alignSelf": "flex-end",
                    "color": "#333333",
                    "flexGrow": 0,
                    "flexShrink": 1,
                    "fontSize": 16,
                    "lineHeight": 24,
                    "textAlign": "right",
                  },
                  {
                    "width": 19.2,
                  },
                ]
              }
              testID="marker-box"
            >
              • 
            </Text>
          </View>
          <View
            style={
              {
                "color": "#333333",
                "flexShrink": 1,
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            <Text
              selectable={true}
              style={{}}
            >
              <Text
                selectable={true}
                style={
                  {
                    "color": "#333333",
                    "fontSize": 16,
                    "lineHeight": 24,
                  }
                }
              >
                Profits were higher than ever.
              </Text>
            </Text>
          </View>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "fontSize": 16,
              "lineHeight": 24,
              "paddingVertical": 8,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
               
            </Text>
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "fontStyle": "italic",
                  "lineHeight": 24,
                }
              }
            >
              <Text
                selectable={true}
                style={
                  {
                    "color": "#333333",
                    "fontSize": 16,
                    "fontStyle": "italic",
                    "lineHeight": 24,
                  }
                }
              >
                Everything
              </Text>
            </Text>
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
               is going according to 
            </Text>
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "fontWeight": "bold",
                  "lineHeight": 24,
                }
              }
            >
              <Text
                selectable={true}
                style={
                  {
                    "color": "#333333",
                    "fontSize": 16,
                    "fontWeight": "bold",
                    "lineHeight": 24,
                  }
                }
              >
                plan
              </Text>
            </Text>
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              .
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Blockquotes Nested Blockquotes 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "> Dorothy followed her through many of the beautiful rooms in her castle.
>

",
        "text": "Dorothy followed her through many of the beautiful rooms in her castle.

",
        "tokens": [
          {
            "raw": "Dorothy followed her through many of the beautiful rooms in her castle.",
            "text": "Dorothy followed her through many of the beautiful rooms in her castle.",
            "tokens": [
              {
                "raw": "Dorothy followed her through many of the beautiful rooms in her castle.",
                "text": "Dorothy followed her through many of the beautiful rooms in her castle.",
                "type": "text",
              },
            ],
            "type": "paragraph",
          },
          {
            "raw": "

",
            "type": "space",
          },
        ],
        "type": "blockquote",
      },
      {
        "raw": ">> The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.",
        "text": "> The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.",
        "tokens": [
          {
            "raw": "> The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.",
            "text": "The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.",
            "tokens": [
              {
                "raw": "The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.",
                "text": "The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.",
                "tokens": [
                  {
                    "raw": "The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.",
                    "text": "The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.",
                    "type": "text",
                  },
                ],
                "type": "paragraph",
              },
            ],
            "type": "blockquote",
          },
        ],
        "type": "blockquote",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "borderLeftColor": "#d0d7de",
            "borderLeftWidth": 4,
            "opacity": 0.8,
            "paddingLeft": 16,
          }
        }
      >
        <View
          style={
            {
              "color": "#333333",
              "fontSize": 16,
              "lineHeight": 24,
              "paddingVertical": 8,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Dorothy followed her through many of the beautiful rooms in her castle.
            </Text>
          </Text>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "borderLeftColor": "#d0d7de",
            "borderLeftWidth": 4,
            "opacity": 0.8,
            "paddingLeft": 16,
          }
        }
      >
        <View
          style={
            {
              "borderLeftColor": "#d0d7de",
              "borderLeftWidth": 4,
              "opacity": 0.8,
              "paddingLeft": 16,
            }
          }
        >
          <View
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
                "paddingVertical": 8,
              }
            }
          >
            <Text
              selectable={true}
              style={{}}
            >
              <Text
                selectable={true}
                style={
                  {
                    "color": "#333333",
                    "fontSize": 16,
                    "lineHeight": 24,
                  }
                }
              >
                The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Code Code Blocks (backtick) 1`] = `
<RCTScrollView
  data={
    [
      {
        "lang": "<html>",
        "raw": "\`\`\`<html>
      <head>
      </head>
    </html>
\`\`\`",
        "text": "      <head>
      </head>
    </html>",
        "type": "code",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <RCTScrollView
        contentContainerStyle={
          {
            "backgroundColor": "#f6f8fa",
            "minWidth": "100%",
            "padding": 16,
          }
        }
        horizontal={true}
      >
        <View>
          <View>
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "fontStyle": "italic",
                  "lineHeight": 24,
                }
              }
            >
                    &lt;head&gt;
      &lt;/head&gt;
    &lt;/html&gt;
            </Text>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Code Code Blocks (backtick), no ending backtick 1`] = `
<RCTScrollView
  data={
    [
      {
        "lang": "<html>",
        "raw": "\`\`\`<html>
      <head>
      </head>
    </html>",
        "text": "      <head>
      </head>
    </html>",
        "type": "code",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <RCTScrollView
        contentContainerStyle={
          {
            "backgroundColor": "#f6f8fa",
            "minWidth": "100%",
            "padding": 16,
          }
        }
        horizontal={true}
      >
        <View>
          <View>
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "fontStyle": "italic",
                  "lineHeight": 24,
                }
              }
            >
                    &lt;head&gt;
      &lt;/head&gt;
    &lt;/html&gt;
            </Text>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Code Code Blocks 1`] = `
<RCTScrollView
  data={
    [
      {
        "codeBlockStyle": "indented",
        "raw": "    <html>
      <head>
      </head>
    </html>",
        "text": "<html>
  <head>
  </head>
</html>",
        "type": "code",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <RCTScrollView
        contentContainerStyle={
          {
            "backgroundColor": "#f6f8fa",
            "minWidth": "100%",
            "padding": 16,
          }
        }
        horizontal={true}
      >
        <View>
          <View>
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "fontStyle": "italic",
                  "lineHeight": 24,
                }
              }
            >
              &lt;html&gt;
  &lt;head&gt;
  &lt;/head&gt;
&lt;/html&gt;
            </Text>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Code Code Span 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "At the command prompt, type \`nano\`.",
        "text": "At the command prompt, type \`nano\`.",
        "tokens": [
          {
            "raw": "At the command prompt, type ",
            "text": "At the command prompt, type ",
            "type": "text",
          },
          {
            "raw": "\`nano\`",
            "text": "nano",
            "type": "codespan",
          },
          {
            "raw": ".",
            "text": ".",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            At the command prompt, type 
          </Text>
          <Text
            selectable={true}
            style={
              {
                "backgroundColor": "#f6f8fa",
                "color": "#333333",
                "fontSize": 16,
                "fontStyle": "italic",
                "fontWeight": "300",
                "lineHeight": 24,
              }
            }
          >
            nano
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            .
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Emphasis Bold 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "Love **is** bold",
        "text": "Love **is** bold",
        "tokens": [
          {
            "raw": "Love ",
            "text": "Love ",
            "type": "text",
          },
          {
            "raw": "**is**",
            "text": "is",
            "tokens": [
              {
                "raw": "is",
                "text": "is",
                "type": "text",
              },
            ],
            "type": "strong",
          },
          {
            "raw": " bold",
            "text": " bold",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            Love 
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "fontWeight": "bold",
                "lineHeight": 24,
              }
            }
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "fontWeight": "bold",
                  "lineHeight": 24,
                }
              }
            >
              is
            </Text>
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
             bold
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Emphasis Bold and Italic 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "This is really ***very*** important text.",
        "text": "This is really ***very*** important text.",
        "tokens": [
          {
            "raw": "This is really ",
            "text": "This is really ",
            "type": "text",
          },
          {
            "raw": "***very***",
            "text": "**very**",
            "tokens": [
              {
                "raw": "**very**",
                "text": "very",
                "tokens": [
                  {
                    "raw": "very",
                    "text": "very",
                    "type": "text",
                  },
                ],
                "type": "strong",
              },
            ],
            "type": "em",
          },
          {
            "raw": " important text.",
            "text": " important text.",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            This is really 
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "fontStyle": "italic",
                "lineHeight": 24,
              }
            }
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "fontStyle": "italic",
                  "fontWeight": "bold",
                  "lineHeight": 24,
                }
              }
            >
              <Text
                selectable={true}
                style={
                  {
                    "color": "#333333",
                    "fontSize": 16,
                    "fontStyle": "italic",
                    "fontWeight": "bold",
                    "lineHeight": 24,
                  }
                }
              >
                very
              </Text>
            </Text>
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
             important text.
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Emphasis Italic 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "A *cat* meow",
        "text": "A *cat* meow",
        "tokens": [
          {
            "raw": "A ",
            "text": "A ",
            "type": "text",
          },
          {
            "raw": "*cat*",
            "text": "cat",
            "tokens": [
              {
                "raw": "cat",
                "text": "cat",
                "type": "text",
              },
            ],
            "type": "em",
          },
          {
            "raw": " meow",
            "text": " meow",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            A 
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "fontStyle": "italic",
                "lineHeight": 24,
              }
            }
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "fontStyle": "italic",
                  "lineHeight": 24,
                }
              }
            >
              cat
            </Text>
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
             meow
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Emphasis Strikethrough 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "A ~~cat~~ meow",
        "text": "A ~~cat~~ meow",
        "tokens": [
          {
            "raw": "A ",
            "text": "A ",
            "type": "text",
          },
          {
            "raw": "~~cat~~",
            "text": "cat",
            "tokens": [
              {
                "raw": "cat",
                "text": "cat",
                "type": "text",
              },
            ],
            "type": "del",
          },
          {
            "raw": " meow",
            "text": " meow",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            A 
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
                "textDecorationLine": "line-through",
                "textDecorationStyle": "solid",
              }
            }
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textDecorationLine": "line-through",
                  "textDecorationStyle": "solid",
                }
              }
            >
              cat
            </Text>
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
             meow
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Escaping Characters Render 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "\\* Without the backslash, this would be a bullet in an unordered list.",
        "text": "\\* Without the backslash, this would be a bullet in an unordered list.",
        "tokens": [
          {
            "raw": "\\*",
            "text": "*",
            "type": "escape",
          },
          {
            "raw": " Without the backslash, this would be a bullet in an unordered list.",
            "text": " Without the backslash, this would be a bullet in an unordered list.",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            *
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
             Without the backslash, this would be a bullet in an unordered list.
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`HTML Render 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "This **word** is bold. This <em>word</em> is italic.",
        "text": "This **word** is bold. This <em>word</em> is italic.",
        "tokens": [
          {
            "raw": "This ",
            "text": "This ",
            "type": "text",
          },
          {
            "raw": "**word**",
            "text": "word",
            "tokens": [
              {
                "raw": "word",
                "text": "word",
                "type": "text",
              },
            ],
            "type": "strong",
          },
          {
            "raw": " is bold. This ",
            "text": " is bold. This ",
            "type": "text",
          },
          {
            "block": false,
            "inLink": false,
            "inRawBlock": false,
            "raw": "<em>",
            "text": "<em>",
            "type": "html",
          },
          {
            "raw": "word",
            "text": "word",
            "type": "text",
          },
          {
            "block": false,
            "inLink": false,
            "inRawBlock": false,
            "raw": "</em>",
            "text": "</em>",
            "type": "html",
          },
          {
            "raw": " is italic.",
            "text": " is italic.",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            This 
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "fontWeight": "bold",
                "lineHeight": 24,
              }
            }
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "fontWeight": "bold",
                  "lineHeight": 24,
                }
              }
            >
              word
            </Text>
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
             is bold. This 
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            &lt;em&gt;
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            word
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            &lt;/em&gt;
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
             is italic.
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Headings Alternate Syntax: Heading level 1 1`] = `
<RCTScrollView
  data={
    [
      {
        "depth": 1,
        "raw": "Heading level 1
===============",
        "text": "Heading level 1",
        "tokens": [
          {
            "raw": "Heading level 1",
            "text": "Heading level 1",
            "type": "text",
          },
        ],
        "type": "heading",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <Text
        selectable={true}
        style={
          {
            "borderBottomColor": "#d0d7de",
            "borderBottomWidth": 1,
            "fontSize": 32,
            "fontWeight": "bold",
            "letterSpacing": 0,
            "lineHeight": 40,
            "marginVertical": 8,
            "paddingBottom": 4,
          }
        }
      >
        <Text
          selectable={true}
          style={
            {
              "borderBottomColor": "#d0d7de",
              "borderBottomWidth": 1,
              "color": "#333333",
              "fontSize": 32,
              "fontWeight": "bold",
              "letterSpacing": 0,
              "lineHeight": 40,
              "marginVertical": 8,
              "paddingBottom": 4,
            }
          }
        >
          Heading level 1
        </Text>
      </Text>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Headings Alternate Syntax: Heading level 2 1`] = `
<RCTScrollView
  data={
    [
      {
        "depth": 2,
        "raw": "Heading level 2
---------------",
        "text": "Heading level 2",
        "tokens": [
          {
            "raw": "Heading level 2",
            "text": "Heading level 2",
            "type": "text",
          },
        ],
        "type": "heading",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <Text
        selectable={true}
        style={
          {
            "borderBottomColor": "#d0d7de",
            "borderBottomWidth": 1,
            "color": "#333333",
            "fontSize": 28,
            "fontWeight": "500",
            "lineHeight": 36,
            "marginVertical": 8,
            "paddingBottom": 4,
          }
        }
      >
        <Text
          selectable={true}
          style={
            {
              "borderBottomColor": "#d0d7de",
              "borderBottomWidth": 1,
              "color": "#333333",
              "fontSize": 28,
              "fontWeight": "500",
              "lineHeight": 36,
              "marginVertical": 8,
              "paddingBottom": 4,
            }
          }
        >
          Heading level 2
        </Text>
      </Text>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Headings Best Practice 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "Try to put a blank line before...",
        "text": "Try to put a blank line before...",
        "tokens": [
          {
            "raw": "Try to put a blank line before...",
            "text": "Try to put a blank line before...",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
      {
        "raw": "

",
        "type": "space",
      },
      {
        "depth": 1,
        "raw": "# Heading

",
        "text": "Heading",
        "tokens": [
          {
            "raw": "Heading",
            "text": "Heading",
            "type": "text",
          },
        ],
        "type": "heading",
      },
      {
        "raw": "...and after a heading.",
        "text": "...and after a heading.",
        "tokens": [
          {
            "raw": "...and after a heading.",
            "text": "...and after a heading.",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            Try to put a blank line before...
          </Text>
        </Text>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <Text
        selectable={true}
        style={
          {
            "borderBottomColor": "#d0d7de",
            "borderBottomWidth": 1,
            "fontSize": 32,
            "fontWeight": "bold",
            "letterSpacing": 0,
            "lineHeight": 40,
            "marginVertical": 8,
            "paddingBottom": 4,
          }
        }
      >
        <Text
          selectable={true}
          style={
            {
              "borderBottomColor": "#d0d7de",
              "borderBottomWidth": 1,
              "color": "#333333",
              "fontSize": 32,
              "fontWeight": "bold",
              "letterSpacing": 0,
              "lineHeight": 40,
              "marginVertical": 8,
              "paddingBottom": 4,
            }
          }
        >
          Heading
        </Text>
      </Text>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            ...and after a heading.
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Headings Heading level 1 1`] = `
<RCTScrollView
  data={
    [
      {
        "depth": 1,
        "raw": "# Heading level 1",
        "text": "Heading level 1",
        "tokens": [
          {
            "raw": "Heading level 1",
            "text": "Heading level 1",
            "type": "text",
          },
        ],
        "type": "heading",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <Text
        selectable={true}
        style={
          {
            "borderBottomColor": "#d0d7de",
            "borderBottomWidth": 1,
            "fontSize": 32,
            "fontWeight": "bold",
            "letterSpacing": 0,
            "lineHeight": 40,
            "marginVertical": 8,
            "paddingBottom": 4,
          }
        }
      >
        <Text
          selectable={true}
          style={
            {
              "borderBottomColor": "#d0d7de",
              "borderBottomWidth": 1,
              "color": "#333333",
              "fontSize": 32,
              "fontWeight": "bold",
              "letterSpacing": 0,
              "lineHeight": 40,
              "marginVertical": 8,
              "paddingBottom": 4,
            }
          }
        >
          Heading level 1
        </Text>
      </Text>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Headings Heading level 2 1`] = `
<RCTScrollView
  data={
    [
      {
        "depth": 2,
        "raw": "## Heading level 2",
        "text": "Heading level 2",
        "tokens": [
          {
            "raw": "Heading level 2",
            "text": "Heading level 2",
            "type": "text",
          },
        ],
        "type": "heading",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <Text
        selectable={true}
        style={
          {
            "borderBottomColor": "#d0d7de",
            "borderBottomWidth": 1,
            "color": "#333333",
            "fontSize": 28,
            "fontWeight": "500",
            "lineHeight": 36,
            "marginVertical": 8,
            "paddingBottom": 4,
          }
        }
      >
        <Text
          selectable={true}
          style={
            {
              "borderBottomColor": "#d0d7de",
              "borderBottomWidth": 1,
              "color": "#333333",
              "fontSize": 28,
              "fontWeight": "500",
              "lineHeight": 36,
              "marginVertical": 8,
              "paddingBottom": 4,
            }
          }
        >
          Heading level 2
        </Text>
      </Text>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Headings Heading level 3 1`] = `
<RCTScrollView
  data={
    [
      {
        "depth": 3,
        "raw": "### Heading level 3",
        "text": "Heading level 3",
        "tokens": [
          {
            "raw": "Heading level 3",
            "text": "Heading level 3",
            "type": "text",
          },
        ],
        "type": "heading",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <Text
        selectable={true}
        style={
          {
            "color": "#333333",
            "fontSize": 24,
            "fontWeight": "500",
            "lineHeight": 32,
            "marginVertical": 4,
          }
        }
      >
        <Text
          selectable={true}
          style={
            {
              "color": "#333333",
              "fontSize": 24,
              "fontWeight": "500",
              "lineHeight": 32,
              "marginVertical": 4,
            }
          }
        >
          Heading level 3
        </Text>
      </Text>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Headings Heading level 4 1`] = `
<RCTScrollView
  data={
    [
      {
        "depth": 4,
        "raw": "#### Heading level 4",
        "text": "Heading level 4",
        "tokens": [
          {
            "raw": "Heading level 4",
            "text": "Heading level 4",
            "type": "text",
          },
        ],
        "type": "heading",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <Text
        selectable={true}
        style={
          {
            "color": "#333333",
            "fontSize": 22,
            "fontWeight": "500",
            "lineHeight": 28,
            "marginVertical": 4,
          }
        }
      >
        <Text
          selectable={true}
          style={
            {
              "color": "#333333",
              "fontSize": 22,
              "fontWeight": "500",
              "lineHeight": 28,
              "marginVertical": 4,
            }
          }
        >
          Heading level 4
        </Text>
      </Text>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Headings Heading level 5 1`] = `
<RCTScrollView
  data={
    [
      {
        "depth": 5,
        "raw": "##### Heading level 5",
        "text": "Heading level 5",
        "tokens": [
          {
            "raw": "Heading level 5",
            "text": "Heading level 5",
            "type": "text",
          },
        ],
        "type": "heading",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <Text
        selectable={true}
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "fontWeight": "500",
            "lineHeight": 24,
            "marginVertical": 2,
          }
        }
      >
        <Text
          selectable={true}
          style={
            {
              "color": "#333333",
              "fontSize": 16,
              "fontWeight": "500",
              "lineHeight": 24,
              "marginVertical": 2,
            }
          }
        >
          Heading level 5
        </Text>
      </Text>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Headings Heading level 6 1`] = `
<RCTScrollView
  data={
    [
      {
        "depth": 6,
        "raw": "###### Heading level 6",
        "text": "Heading level 6",
        "tokens": [
          {
            "raw": "Heading level 6",
            "text": "Heading level 6",
            "type": "text",
          },
        ],
        "type": "heading",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <Text
        selectable={true}
        style={
          {
            "color": "#333333",
            "fontSize": 14,
            "fontWeight": "500",
            "lineHeight": 20,
            "marginVertical": 2,
          }
        }
      >
        <Text
          selectable={true}
          style={
            {
              "color": "#333333",
              "fontSize": 14,
              "fontWeight": "500",
              "lineHeight": 20,
              "marginVertical": 2,
            }
          }
        >
          Heading level 6
        </Text>
      </Text>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Horizontal Rules Asterisks 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "***",
        "type": "hr",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "borderBottomColor": "#d0d7de",
            "borderBottomWidth": 1,
            "marginVertical": 4,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`Horizontal Rules Dashes 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "---",
        "type": "hr",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "borderBottomColor": "#d0d7de",
            "borderBottomWidth": 1,
            "marginVertical": 4,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`Horizontal Rules Horizontal Rule with Paragraph 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "Try to put a blank line before...",
        "text": "Try to put a blank line before...",
        "tokens": [
          {
            "raw": "Try to put a blank line before...",
            "text": "Try to put a blank line before...",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
      {
        "raw": "

",
        "type": "space",
      },
      {
        "raw": "---

",
        "type": "hr",
      },
      {
        "raw": "...and after a horizontal rule.",
        "text": "...and after a horizontal rule.",
        "tokens": [
          {
            "raw": "...and after a horizontal rule.",
            "text": "...and after a horizontal rule.",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            Try to put a blank line before...
          </Text>
        </Text>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "borderBottomColor": "#d0d7de",
            "borderBottomWidth": 1,
            "marginVertical": 4,
          }
        }
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            ...and after a horizontal rule.
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Horizontal Rules Underscores 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "_________________",
        "type": "hr",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "borderBottomColor": "#d0d7de",
            "borderBottomWidth": 1,
            "marginVertical": 4,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`Images Linking Images 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "[![An old rock in the desert](https://dummyimage.com/100x100/fff/aaa "Shiprock, New Mexico by Beau Rogers")](https://dummyimage.com/100x100/fff/aaa)",
        "text": "[![An old rock in the desert](https://dummyimage.com/100x100/fff/aaa "Shiprock, New Mexico by Beau Rogers")](https://dummyimage.com/100x100/fff/aaa)",
        "tokens": [
          {
            "href": "https://dummyimage.com/100x100/fff/aaa",
            "raw": "[![An old rock in the desert](https://dummyimage.com/100x100/fff/aaa "Shiprock, New Mexico by Beau Rogers")](https://dummyimage.com/100x100/fff/aaa)",
            "text": "![An old rock in the desert](https://dummyimage.com/100x100/fff/aaa "Shiprock, New Mexico by Beau Rogers")",
            "title": null,
            "tokens": [
              {
                "href": "https://dummyimage.com/100x100/fff/aaa",
                "raw": "![An old rock in the desert](https://dummyimage.com/100x100/fff/aaa "Shiprock, New Mexico by Beau Rogers")",
                "text": "An old rock in the desert",
                "title": "Shiprock, New Mexico by Beau Rogers",
                "type": "image",
              },
            ],
            "type": "link",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <View
          accessibilityHint="Opens in a new window"
          accessibilityRole="link"
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            accessibilityIgnoresInvertColors={true}
            style={
              {
                "aspectRatio": undefined,
                "width": "100%",
              }
            }
          >
            <Image
              accessibilityLabel="An old rock in the desert"
              accessibilityRole="image"
              source={
                {
                  "uri": "https://dummyimage.com/100x100/fff/aaa",
                }
              }
              style={
                [
                  {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  {
                    "height": undefined,
                    "width": "100%",
                  },
                  {
                    "resizeMode": "cover",
                  },
                ]
              }
              testID="react-native-marked-md-image"
            />
            <ActivityIndicator
              size="small"
              testID="react-native-marked-md-image-activity-indicator"
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Images Render 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "![The San Juan Mountains are beautiful!](https://dummyimage.com/100x100/fff/aaa "San Juan Mountains")",
        "text": "![The San Juan Mountains are beautiful!](https://dummyimage.com/100x100/fff/aaa "San Juan Mountains")",
        "tokens": [
          {
            "href": "https://dummyimage.com/100x100/fff/aaa",
            "raw": "![The San Juan Mountains are beautiful!](https://dummyimage.com/100x100/fff/aaa "San Juan Mountains")",
            "text": "The San Juan Mountains are beautiful!",
            "title": "San Juan Mountains",
            "type": "image",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <View
          accessibilityIgnoresInvertColors={true}
          style={
            {
              "aspectRatio": undefined,
              "width": "100%",
            }
          }
        >
          <Image
            accessibilityLabel="The San Juan Mountains are beautiful!"
            accessibilityRole="image"
            source={
              {
                "uri": "https://dummyimage.com/100x100/fff/aaa",
              }
            }
            style={
              [
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                  "width": "100%",
                },
                {
                  "resizeMode": "cover",
                },
              ]
            }
            testID="react-native-marked-md-image"
          />
          <ActivityIndicator
            size="small"
            testID="react-native-marked-md-image-activity-indicator"
          />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Images SVG Linking 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "[![SVG Repo](https://www.svgrepo.com/show/513268/beer.svg "SVG Repo")](https://www.svgrepo.com)",
        "text": "[![SVG Repo](https://www.svgrepo.com/show/513268/beer.svg "SVG Repo")](https://www.svgrepo.com)",
        "tokens": [
          {
            "href": "https://www.svgrepo.com",
            "raw": "[![SVG Repo](https://www.svgrepo.com/show/513268/beer.svg "SVG Repo")](https://www.svgrepo.com)",
            "text": "![SVG Repo](https://www.svgrepo.com/show/513268/beer.svg "SVG Repo")",
            "title": null,
            "tokens": [
              {
                "href": "https://www.svgrepo.com/show/513268/beer.svg",
                "raw": "![SVG Repo](https://www.svgrepo.com/show/513268/beer.svg "SVG Repo")",
                "text": "SVG Repo",
                "title": "SVG Repo",
                "type": "image",
              },
            ],
            "type": "link",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <View
          accessibilityHint="Opens in a new window"
          accessibilityRole="link"
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            onLayout={[Function]}
            style={
              {
                "aspectRatio": undefined,
                "width": "100%",
              }
            }
          >
            <ActivityIndicator
              size="small"
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Images SVG images 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "![svg](https://www.svgrepo.com/show/513268/beer.svg)",
        "text": "![svg](https://www.svgrepo.com/show/513268/beer.svg)",
        "tokens": [
          {
            "href": "https://www.svgrepo.com/show/513268/beer.svg",
            "raw": "![svg](https://www.svgrepo.com/show/513268/beer.svg)",
            "text": "svg",
            "title": null,
            "type": "image",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            {
              "aspectRatio": undefined,
              "width": "100%",
            }
          }
        >
          <ActivityIndicator
            size="small"
          />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Line Breaks Trailing New Line Character 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "First line with a backslash after.
And the next line.",
        "text": "First line with a backslash after.
And the next line.",
        "tokens": [
          {
            "raw": "First line with a backslash after.
And the next line.",
            "text": "First line with a backslash after.
And the next line.",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            First line with a backslash after.
And the next line.
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Line Breaks Trailing slash 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "First line with a backslash after.\\
      And the next line.",
        "text": "First line with a backslash after.\\
      And the next line.",
        "tokens": [
          {
            "raw": "First line with a backslash after.",
            "text": "First line with a backslash after.",
            "type": "text",
          },
          {
            "raw": "\\
",
            "type": "br",
          },
          {
            "raw": "      And the next line.",
            "text": "      And the next line.",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            First line with a backslash after.
          </Text>
          <Text
            selectable={true}
            style={{}}
          >
            

          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
                  And the next line.
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Links Basic 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "My favorite search engine is [Duck Duck Go](https://duckduckgo.com).",
        "text": "My favorite search engine is [Duck Duck Go](https://duckduckgo.com).",
        "tokens": [
          {
            "raw": "My favorite search engine is ",
            "text": "My favorite search engine is ",
            "type": "text",
          },
          {
            "href": "https://duckduckgo.com",
            "raw": "[Duck Duck Go](https://duckduckgo.com)",
            "text": "Duck Duck Go",
            "title": null,
            "tokens": [
              {
                "raw": "Duck Duck Go",
                "text": "Duck Duck Go",
                "type": "text",
              },
            ],
            "type": "link",
          },
          {
            "raw": ".",
            "text": ".",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            My favorite search engine is 
          </Text>
          <Text
            accessibilityHint="Opens in a new window"
            accessibilityRole="link"
            onPress={[Function]}
            selectable={true}
            style={
              {
                "color": "#58a6ff",
                "fontSize": 16,
                "fontStyle": "italic",
                "lineHeight": 24,
              }
            }
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#58a6ff",
                  "fontSize": 16,
                  "fontStyle": "italic",
                  "lineHeight": 24,
                }
              }
            >
              Duck Duck Go
            </Text>
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            .
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Links Formatting Links 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "I love supporting the **[EFF](https://eff.org)**.
This is the *[Markdown Guide](https://www.markdownguide.org)*.
See the section on [\`code\`](#code).",
        "text": "I love supporting the **[EFF](https://eff.org)**.
This is the *[Markdown Guide](https://www.markdownguide.org)*.
See the section on [\`code\`](#code).",
        "tokens": [
          {
            "raw": "I love supporting the ",
            "text": "I love supporting the ",
            "type": "text",
          },
          {
            "raw": "**[EFF](https://eff.org)**",
            "text": "[EFF](https://eff.org)",
            "tokens": [
              {
                "href": "https://eff.org",
                "raw": "[EFF](https://eff.org)",
                "text": "EFF",
                "title": null,
                "tokens": [
                  {
                    "raw": "EFF",
                    "text": "EFF",
                    "type": "text",
                  },
                ],
                "type": "link",
              },
            ],
            "type": "strong",
          },
          {
            "raw": ".
This is the ",
            "text": ".
This is the ",
            "type": "text",
          },
          {
            "raw": "*[Markdown Guide](https://www.markdownguide.org)*",
            "text": "[Markdown Guide](https://www.markdownguide.org)",
            "tokens": [
              {
                "href": "https://www.markdownguide.org",
                "raw": "[Markdown Guide](https://www.markdownguide.org)",
                "text": "Markdown Guide",
                "title": null,
                "tokens": [
                  {
                    "raw": "Markdown Guide",
                    "text": "Markdown Guide",
                    "type": "text",
                  },
                ],
                "type": "link",
              },
            ],
            "type": "em",
          },
          {
            "raw": ".
See the section on ",
            "text": ".
See the section on ",
            "type": "text",
          },
          {
            "href": "#code",
            "raw": "[\`code\`](#code)",
            "text": "\`code\`",
            "title": null,
            "tokens": [
              {
                "raw": "\`code\`",
                "text": "code",
                "type": "codespan",
              },
            ],
            "type": "link",
          },
          {
            "raw": ".",
            "text": ".",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            I love supporting the 
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "fontWeight": "bold",
                "lineHeight": 24,
              }
            }
          >
            <Text
              accessibilityHint="Opens in a new window"
              accessibilityRole="link"
              onPress={[Function]}
              selectable={true}
              style={
                {
                  "color": "#58a6ff",
                  "fontSize": 16,
                  "fontStyle": "italic",
                  "fontWeight": "bold",
                  "lineHeight": 24,
                }
              }
            >
              <Text
                selectable={true}
                style={
                  {
                    "color": "#58a6ff",
                    "fontSize": 16,
                    "fontStyle": "italic",
                    "fontWeight": "bold",
                    "lineHeight": 24,
                  }
                }
              >
                EFF
              </Text>
            </Text>
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            .
This is the 
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "fontStyle": "italic",
                "lineHeight": 24,
              }
            }
          >
            <Text
              accessibilityHint="Opens in a new window"
              accessibilityRole="link"
              onPress={[Function]}
              selectable={true}
              style={
                {
                  "color": "#58a6ff",
                  "fontSize": 16,
                  "fontStyle": "italic",
                  "lineHeight": 24,
                }
              }
            >
              <Text
                selectable={true}
                style={
                  {
                    "color": "#58a6ff",
                    "fontSize": 16,
                    "fontStyle": "italic",
                    "lineHeight": 24,
                  }
                }
              >
                Markdown Guide
              </Text>
            </Text>
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            .
See the section on 
          </Text>
          <Text
            accessibilityHint="Opens in a new window"
            accessibilityRole="link"
            onPress={[Function]}
            selectable={true}
            style={
              {
                "color": "#58a6ff",
                "fontSize": 16,
                "fontStyle": "italic",
                "lineHeight": 24,
              }
            }
          >
            <Text
              selectable={true}
              style={
                {
                  "backgroundColor": "#f6f8fa",
                  "color": "#58a6ff",
                  "fontSize": 16,
                  "fontStyle": "italic",
                  "fontWeight": "300",
                  "lineHeight": 24,
                }
              }
            >
              code
            </Text>
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            .
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Links Links without text, (no render) 1`] = `
<RCTScrollView
  data={
    [
      {
        "depth": 2,
        "raw": "Table of Contents[](https://mastersoftwaretesting.com/testing-fundamentals/software-testing-101-what-is-software-testing#table-of-contents)
-------------------------------------------------------------------------------------------------------------------------------------------
",
        "text": "Table of Contents[](https://mastersoftwaretesting.com/testing-fundamentals/software-testing-101-what-is-software-testing#table-of-contents)",
        "tokens": [
          {
            "raw": "Table of Contents",
            "text": "Table of Contents",
            "type": "text",
          },
          {
            "href": "https://mastersoftwaretesting.com/testing-fundamentals/software-testing-101-what-is-software-testing#table-of-contents",
            "raw": "[](https://mastersoftwaretesting.com/testing-fundamentals/software-testing-101-what-is-software-testing#table-of-contents)",
            "text": "",
            "title": null,
            "tokens": [],
            "type": "link",
          },
        ],
        "type": "heading",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <Text
        selectable={true}
        style={
          {
            "borderBottomColor": "#d0d7de",
            "borderBottomWidth": 1,
            "color": "#333333",
            "fontSize": 28,
            "fontWeight": "500",
            "lineHeight": 36,
            "marginVertical": 8,
            "paddingBottom": 4,
          }
        }
      >
        <Text
          selectable={true}
          style={
            {
              "borderBottomColor": "#d0d7de",
              "borderBottomWidth": 1,
              "color": "#333333",
              "fontSize": 28,
              "fontWeight": "500",
              "lineHeight": 36,
              "marginVertical": 8,
              "paddingBottom": 4,
            }
          }
        >
          Table of Contents
        </Text>
      </Text>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Links Titles 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "My favorite search engine is [Duck Duck Go](https://duckduckgo.com "The best search engine for privacy").",
        "text": "My favorite search engine is [Duck Duck Go](https://duckduckgo.com "The best search engine for privacy").",
        "tokens": [
          {
            "raw": "My favorite search engine is ",
            "text": "My favorite search engine is ",
            "type": "text",
          },
          {
            "href": "https://duckduckgo.com",
            "raw": "[Duck Duck Go](https://duckduckgo.com "The best search engine for privacy")",
            "text": "Duck Duck Go",
            "title": "The best search engine for privacy",
            "tokens": [
              {
                "raw": "Duck Duck Go",
                "text": "Duck Duck Go",
                "type": "text",
              },
            ],
            "type": "link",
          },
          {
            "raw": ".",
            "text": ".",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            My favorite search engine is 
          </Text>
          <Text
            accessibilityHint="Opens in a new window"
            accessibilityRole="link"
            onPress={[Function]}
            selectable={true}
            style={
              {
                "color": "#58a6ff",
                "fontSize": 16,
                "fontStyle": "italic",
                "lineHeight": 24,
              }
            }
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#58a6ff",
                  "fontSize": 16,
                  "fontStyle": "italic",
                  "lineHeight": 24,
                }
              }
            >
              Duck Duck Go
            </Text>
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            .
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Links URLs and Email Addresses 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "<https://www.markdownguide.org>",
        "text": "<https://www.markdownguide.org>",
        "tokens": [
          {
            "href": "https://www.markdownguide.org",
            "raw": "<https://www.markdownguide.org>",
            "text": "https://www.markdownguide.org",
            "tokens": [
              {
                "raw": "https://www.markdownguide.org",
                "text": "https://www.markdownguide.org",
                "type": "text",
              },
            ],
            "type": "link",
          },
        ],
        "type": "paragraph",
      },
      {
        "raw": "

",
        "type": "space",
      },
      {
        "raw": "<fake@example.com>",
        "text": "<fake@example.com>",
        "tokens": [
          {
            "href": "mailto:fake@example.com",
            "raw": "<fake@example.com>",
            "text": "fake@example.com",
            "tokens": [
              {
                "raw": "fake@example.com",
                "text": "fake@example.com",
                "type": "text",
              },
            ],
            "type": "link",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            accessibilityHint="Opens in a new window"
            accessibilityRole="link"
            onPress={[Function]}
            selectable={true}
            style={
              {
                "color": "#58a6ff",
                "fontSize": 16,
                "fontStyle": "italic",
                "lineHeight": 24,
              }
            }
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#58a6ff",
                  "fontSize": 16,
                  "fontStyle": "italic",
                  "lineHeight": 24,
                }
              }
            >
              https://www.markdownguide.org
            </Text>
          </Text>
        </Text>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            accessibilityHint="Opens in a new window"
            accessibilityRole="link"
            onPress={[Function]}
            selectable={true}
            style={
              {
                "color": "#58a6ff",
                "fontSize": 16,
                "fontStyle": "italic",
                "lineHeight": 24,
              }
            }
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#58a6ff",
                  "fontSize": 16,
                  "fontStyle": "italic",
                  "lineHeight": 24,
                }
              }
            >
              fake@example.com
            </Text>
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Lists Elements in Lists: Blockquotes 1`] = `
<RCTScrollView
  data={
    [
      {
        "items": [
          {
            "checked": undefined,
            "loose": true,
            "raw": "- This is the first list item.
",
            "task": false,
            "text": "This is the first list item.",
            "tokens": [
              {
                "raw": "This is the first list item.",
                "text": "This is the first list item.",
                "tokens": [
                  {
                    "raw": "This is the first list item.",
                    "text": "This is the first list item.",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": true,
            "raw": "- Here's the second list item.

    > A blockquote would look great below the second list item.

",
            "task": false,
            "text": "Here's the second list item.

  > A blockquote would look great below the second list item.
",
            "tokens": [
              {
                "raw": "Here's the second list item.",
                "text": "Here's the second list item.",
                "tokens": [
                  {
                    "raw": "Here's the second list item.",
                    "text": "Here&#39;s the second list item.",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
              {
                "raw": "

",
                "type": "space",
              },
              {
                "raw": "  > A blockquote would look great below the second list item.
",
                "text": "A blockquote would look great below the second list item.
",
                "tokens": [
                  {
                    "raw": "A blockquote would look great below the second list item.
",
                    "text": "A blockquote would look great below the second list item.",
                    "tokens": [
                      {
                        "raw": "A blockquote would look great below the second list item.",
                        "text": "A blockquote would look great below the second list item.",
                        "type": "text",
                      },
                    ],
                    "type": "paragraph",
                  },
                ],
                "type": "blockquote",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": true,
            "raw": "- And here's the third list item.",
            "task": false,
            "text": "And here's the third list item.",
            "tokens": [
              {
                "raw": "And here's the third list item.",
                "text": "And here's the third list item.",
                "tokens": [
                  {
                    "raw": "And here's the third list item.",
                    "text": "And here&#39;s the third list item.",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
        ],
        "loose": true,
        "ordered": false,
        "raw": "- This is the first list item.
- Here's the second list item.

    > A blockquote would look great below the second list item.

- And here's the third list item.",
        "start": "",
        "type": "list",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 19.2,
                },
              ]
            }
            testID="marker-box"
          >
            • 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              This is the first list item.
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 19.2,
                },
              ]
            }
            testID="marker-box"
          >
            • 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Here's the second list item.
            </Text>
          </Text>
          <View
            style={
              {
                "borderLeftColor": "#d0d7de",
                "borderLeftWidth": 4,
                "opacity": 0.8,
                "paddingLeft": 16,
              }
            }
          >
            <View
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                  "paddingVertical": 8,
                }
              }
            >
              <Text
                selectable={true}
                style={{}}
              >
                <Text
                  selectable={true}
                  style={
                    {
                      "color": "#333333",
                      "fontSize": 16,
                      "lineHeight": 24,
                    }
                  }
                >
                  A blockquote would look great below the second list item.
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 19.2,
                },
              ]
            }
            testID="marker-box"
          >
            • 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              And here's the third list item.
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Lists Elements in Lists: Code Blocks 1`] = `
<RCTScrollView
  data={
    [
      {
        "items": [
          {
            "checked": undefined,
            "loose": true,
            "raw": "* This is the first list item.
",
            "task": false,
            "text": "This is the first list item.",
            "tokens": [
              {
                "raw": "This is the first list item.",
                "text": "This is the first list item.",
                "tokens": [
                  {
                    "raw": "This is the first list item.",
                    "text": "This is the first list item.",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": true,
            "raw": "* Here's the second list item.

        <html>
        <head>
        </head>
        </html>

",
            "task": false,
            "text": "Here's the second list item.

      <html>
      <head>
      </head>
      </html>
",
            "tokens": [
              {
                "raw": "Here's the second list item.",
                "text": "Here's the second list item.",
                "tokens": [
                  {
                    "raw": "Here's the second list item.",
                    "text": "Here&#39;s the second list item.",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
              {
                "raw": "

",
                "type": "space",
              },
              {
                "codeBlockStyle": "indented",
                "raw": "      <html>
      <head>
      </head>
      </html>
",
                "text": "  <html>
  <head>
  </head>
  </html>",
                "type": "code",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": true,
            "raw": "* And here's the third list item.",
            "task": false,
            "text": "And here's the third list item.",
            "tokens": [
              {
                "raw": "And here's the third list item.",
                "text": "And here's the third list item.",
                "tokens": [
                  {
                    "raw": "And here's the third list item.",
                    "text": "And here&#39;s the third list item.",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
        ],
        "loose": true,
        "ordered": false,
        "raw": "* This is the first list item.
* Here's the second list item.

        <html>
        <head>
        </head>
        </html>

* And here's the third list item.",
        "start": "",
        "type": "list",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 19.2,
                },
              ]
            }
            testID="marker-box"
          >
            • 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              This is the first list item.
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 19.2,
                },
              ]
            }
            testID="marker-box"
          >
            • 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Here's the second list item.
            </Text>
          </Text>
          <RCTScrollView
            contentContainerStyle={
              {
                "backgroundColor": "#f6f8fa",
                "minWidth": "100%",
                "padding": 16,
              }
            }
            horizontal={true}
          >
            <View>
              <View>
                <Text
                  selectable={true}
                  style={
                    {
                      "color": "#333333",
                      "fontSize": 16,
                      "fontStyle": "italic",
                      "lineHeight": 24,
                    }
                  }
                >
                    &lt;html&gt;
  &lt;head&gt;
  &lt;/head&gt;
  &lt;/html&gt;
                </Text>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 19.2,
                },
              ]
            }
            testID="marker-box"
          >
            • 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              And here's the third list item.
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Lists Elements in Lists: Images 1`] = `
<RCTScrollView
  data={
    [
      {
        "items": [
          {
            "checked": undefined,
            "loose": true,
            "raw": "1. Open the file containing the Linux mascot.
",
            "task": false,
            "text": "Open the file containing the Linux mascot.",
            "tokens": [
              {
                "raw": "Open the file containing the Linux mascot.",
                "text": "Open the file containing the Linux mascot.",
                "tokens": [
                  {
                    "raw": "Open the file containing the Linux mascot.",
                    "text": "Open the file containing the Linux mascot.",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": true,
            "raw": "2. Marvel at its beauty.

    ![](https://dummyimage.com/100x100/fff/aaa)

",
            "task": false,
            "text": "Marvel at its beauty.

 ![](https://dummyimage.com/100x100/fff/aaa)
",
            "tokens": [
              {
                "raw": "Marvel at its beauty.",
                "text": "Marvel at its beauty.",
                "tokens": [
                  {
                    "raw": "Marvel at its beauty.",
                    "text": "Marvel at its beauty.",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
              {
                "raw": "

",
                "type": "space",
              },
              {
                "raw": " ![](https://dummyimage.com/100x100/fff/aaa)
",
                "text": " ![](https://dummyimage.com/100x100/fff/aaa)",
                "tokens": [
                  {
                    "raw": " ",
                    "text": " ",
                    "type": "text",
                  },
                  {
                    "href": "https://dummyimage.com/100x100/fff/aaa",
                    "raw": "![](https://dummyimage.com/100x100/fff/aaa)",
                    "text": "",
                    "title": null,
                    "type": "image",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": true,
            "raw": "3. Close the file.",
            "task": false,
            "text": "Close the file.",
            "tokens": [
              {
                "raw": "Close the file.",
                "text": "Close the file.",
                "tokens": [
                  {
                    "raw": "Close the file.",
                    "text": "Close the file.",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
        ],
        "loose": true,
        "ordered": true,
        "raw": "1. Open the file containing the Linux mascot.
2. Marvel at its beauty.

    ![](https://dummyimage.com/100x100/fff/aaa)

3. Close the file.",
        "start": 1,
        "type": "list",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 28.799999999999997,
                },
              ]
            }
            testID="marker-box"
          >
            1. 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Open the file containing the Linux mascot.
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 28.799999999999997,
                },
              ]
            }
            testID="marker-box"
          >
            2. 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Marvel at its beauty.
            </Text>
          </Text>
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "flexShrink": 1,
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
               
            </Text>
          </Text>
          <View
            accessibilityIgnoresInvertColors={true}
            style={
              {
                "aspectRatio": undefined,
                "width": "100%",
              }
            }
          >
            <Image
              accessibilityLabel={null}
              accessibilityRole="image"
              source={
                {
                  "uri": "https://dummyimage.com/100x100/fff/aaa",
                }
              }
              style={
                [
                  {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  {
                    "height": undefined,
                    "width": "100%",
                  },
                  {
                    "resizeMode": "cover",
                  },
                ]
              }
              testID="react-native-marked-md-image"
            />
            <ActivityIndicator
              size="small"
              testID="react-native-marked-md-image-activity-indicator"
            />
          </View>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 28.799999999999997,
                },
              ]
            }
            testID="marker-box"
          >
            3. 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Close the file.
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Lists Elements in Lists: Lists 1`] = `
<RCTScrollView
  data={
    [
      {
        "items": [
          {
            "checked": undefined,
            "loose": false,
            "raw": "1. First item
",
            "task": false,
            "text": "First item",
            "tokens": [
              {
                "raw": "First item",
                "text": "First item",
                "tokens": [
                  {
                    "raw": "First item",
                    "text": "First item",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": false,
            "raw": "2. Second item
",
            "task": false,
            "text": "Second item",
            "tokens": [
              {
                "raw": "Second item",
                "text": "Second item",
                "tokens": [
                  {
                    "raw": "Second item",
                    "text": "Second item",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": false,
            "raw": "3. Third item
    - Indented item1
    - Indented item2
",
            "task": false,
            "text": "Third item
 - Indented item1
 - Indented item2",
            "tokens": [
              {
                "raw": "Third item
",
                "text": "Third item",
                "tokens": [
                  {
                    "raw": "Third item",
                    "text": "Third item",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
              {
                "items": [
                  {
                    "checked": undefined,
                    "loose": false,
                    "raw": " - Indented item1
",
                    "task": false,
                    "text": "Indented item1",
                    "tokens": [
                      {
                        "raw": "Indented item1",
                        "text": "Indented item1",
                        "tokens": [
                          {
                            "raw": "Indented item1",
                            "text": "Indented item1",
                            "type": "text",
                          },
                        ],
                        "type": "text",
                      },
                    ],
                    "type": "list_item",
                  },
                  {
                    "checked": undefined,
                    "loose": false,
                    "raw": " - Indented item2",
                    "task": false,
                    "text": "Indented item2",
                    "tokens": [
                      {
                        "raw": "Indented item2",
                        "text": "Indented item2",
                        "tokens": [
                          {
                            "raw": "Indented item2",
                            "text": "Indented item2",
                            "type": "text",
                          },
                        ],
                        "type": "text",
                      },
                    ],
                    "type": "list_item",
                  },
                ],
                "loose": false,
                "ordered": false,
                "raw": " - Indented item1
 - Indented item2",
                "start": "",
                "type": "list",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": false,
            "raw": "4. Fourth item",
            "task": false,
            "text": "Fourth item",
            "tokens": [
              {
                "raw": "Fourth item",
                "text": "Fourth item",
                "tokens": [
                  {
                    "raw": "Fourth item",
                    "text": "Fourth item",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
        ],
        "loose": false,
        "ordered": true,
        "raw": "1. First item
2. Second item
3. Third item
    - Indented item1
    - Indented item2
4. Fourth item",
        "start": 1,
        "type": "list",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 28.799999999999997,
                },
              ]
            }
            testID="marker-box"
          >
            1. 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              First item
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 28.799999999999997,
                },
              ]
            }
            testID="marker-box"
          >
            2. 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Second item
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 28.799999999999997,
                },
              ]
            }
            testID="marker-box"
          >
            3. 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Third item
            </Text>
          </Text>
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "flexDirection": "row",
                  "flexWrap": "nowrap",
                },
                undefined,
              ]
            }
            testID="marked-list-item"
          >
            <View>
              <Text
                style={
                  [
                    {
                      "alignSelf": "flex-end",
                      "color": "#333333",
                      "flexGrow": 0,
                      "flexShrink": 1,
                      "fontSize": 16,
                      "lineHeight": 24,
                      "textAlign": "right",
                    },
                    {
                      "width": 19.2,
                    },
                  ]
                }
                testID="marker-box"
              >
                • 
              </Text>
            </View>
            <View
              style={
                {
                  "color": "#333333",
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              <Text
                selectable={true}
                style={{}}
              >
                <Text
                  selectable={true}
                  style={
                    {
                      "color": "#333333",
                      "fontSize": 16,
                      "lineHeight": 24,
                    }
                  }
                >
                  Indented item1
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "flexDirection": "row",
                  "flexWrap": "nowrap",
                },
                undefined,
              ]
            }
            testID="marked-list-item"
          >
            <View>
              <Text
                style={
                  [
                    {
                      "alignSelf": "flex-end",
                      "color": "#333333",
                      "flexGrow": 0,
                      "flexShrink": 1,
                      "fontSize": 16,
                      "lineHeight": 24,
                      "textAlign": "right",
                    },
                    {
                      "width": 19.2,
                    },
                  ]
                }
                testID="marker-box"
              >
                • 
              </Text>
            </View>
            <View
              style={
                {
                  "color": "#333333",
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              <Text
                selectable={true}
                style={{}}
              >
                <Text
                  selectable={true}
                  style={
                    {
                      "color": "#333333",
                      "fontSize": 16,
                      "lineHeight": 24,
                    }
                  }
                >
                  Indented item2
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 28.799999999999997,
                },
              ]
            }
            testID="marker-box"
          >
            4. 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Fourth item
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Lists Elements in Lists: Paragraphs 1`] = `
<RCTScrollView
  data={
    [
      {
        "items": [
          {
            "checked": undefined,
            "loose": true,
            "raw": "- This is the first list item.
",
            "task": false,
            "text": "This is the first list item.",
            "tokens": [
              {
                "raw": "This is the first list item.",
                "text": "This is the first list item.",
                "tokens": [
                  {
                    "raw": "This is the first list item.",
                    "text": "This is the first list item.",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": true,
            "raw": "- Here's the second list item.

    I need to add another paragraph below the second list item.

",
            "task": false,
            "text": "Here's the second list item.

  I need to add another paragraph below the second list item.
",
            "tokens": [
              {
                "raw": "Here's the second list item.",
                "text": "Here's the second list item.",
                "tokens": [
                  {
                    "raw": "Here's the second list item.",
                    "text": "Here&#39;s the second list item.",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
              {
                "raw": "

",
                "type": "space",
              },
              {
                "raw": "  I need to add another paragraph below the second list item.
",
                "text": "  I need to add another paragraph below the second list item.",
                "tokens": [
                  {
                    "raw": "  I need to add another paragraph below the second list item.",
                    "text": "  I need to add another paragraph below the second list item.",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": true,
            "raw": "- And here's the third list item.",
            "task": false,
            "text": "And here's the third list item.",
            "tokens": [
              {
                "raw": "And here's the third list item.",
                "text": "And here's the third list item.",
                "tokens": [
                  {
                    "raw": "And here's the third list item.",
                    "text": "And here&#39;s the third list item.",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
        ],
        "loose": true,
        "ordered": false,
        "raw": "- This is the first list item.
- Here's the second list item.

    I need to add another paragraph below the second list item.

- And here's the third list item.",
        "start": "",
        "type": "list",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 19.2,
                },
              ]
            }
            testID="marker-box"
          >
            • 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              This is the first list item.
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 19.2,
                },
              ]
            }
            testID="marker-box"
          >
            • 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Here's the second list item.
            </Text>
          </Text>
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
                I need to add another paragraph below the second list item.
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 19.2,
                },
              ]
            }
            testID="marker-box"
          >
            • 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              And here's the third list item.
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Lists Ordered Lists 1`] = `
<RCTScrollView
  data={
    [
      {
        "items": [
          {
            "checked": undefined,
            "loose": false,
            "raw": "1. First item
",
            "task": false,
            "text": "First item",
            "tokens": [
              {
                "raw": "First item",
                "text": "First item",
                "tokens": [
                  {
                    "raw": "First item",
                    "text": "First item",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": false,
            "raw": "2. Second item
",
            "task": false,
            "text": "Second item",
            "tokens": [
              {
                "raw": "Second item",
                "text": "Second item",
                "tokens": [
                  {
                    "raw": "Second item",
                    "text": "Second item",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": false,
            "raw": "3. Third item
    1. Indented item1
    2. Indented item2
",
            "task": false,
            "text": "Third item
 1. Indented item1
 2. Indented item2",
            "tokens": [
              {
                "raw": "Third item
",
                "text": "Third item",
                "tokens": [
                  {
                    "raw": "Third item",
                    "text": "Third item",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
              {
                "items": [
                  {
                    "checked": undefined,
                    "loose": false,
                    "raw": " 1. Indented item1
",
                    "task": false,
                    "text": "Indented item1",
                    "tokens": [
                      {
                        "raw": "Indented item1",
                        "text": "Indented item1",
                        "tokens": [
                          {
                            "raw": "Indented item1",
                            "text": "Indented item1",
                            "type": "text",
                          },
                        ],
                        "type": "text",
                      },
                    ],
                    "type": "list_item",
                  },
                  {
                    "checked": undefined,
                    "loose": false,
                    "raw": " 2. Indented item2",
                    "task": false,
                    "text": "Indented item2",
                    "tokens": [
                      {
                        "raw": "Indented item2",
                        "text": "Indented item2",
                        "tokens": [
                          {
                            "raw": "Indented item2",
                            "text": "Indented item2",
                            "type": "text",
                          },
                        ],
                        "type": "text",
                      },
                    ],
                    "type": "list_item",
                  },
                ],
                "loose": false,
                "ordered": true,
                "raw": " 1. Indented item1
 2. Indented item2",
                "start": 1,
                "type": "list",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": false,
            "raw": "4. Fourth item",
            "task": false,
            "text": "Fourth item",
            "tokens": [
              {
                "raw": "Fourth item",
                "text": "Fourth item",
                "tokens": [
                  {
                    "raw": "Fourth item",
                    "text": "Fourth item",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
        ],
        "loose": false,
        "ordered": true,
        "raw": "1. First item
2. Second item
3. Third item
    1. Indented item1
    2. Indented item2
4. Fourth item",
        "start": 1,
        "type": "list",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 28.799999999999997,
                },
              ]
            }
            testID="marker-box"
          >
            1. 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              First item
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 28.799999999999997,
                },
              ]
            }
            testID="marker-box"
          >
            2. 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Second item
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 28.799999999999997,
                },
              ]
            }
            testID="marker-box"
          >
            3. 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Third item
            </Text>
          </Text>
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "flexDirection": "row",
                  "flexWrap": "nowrap",
                },
                undefined,
              ]
            }
            testID="marked-list-item"
          >
            <View>
              <Text
                style={
                  [
                    {
                      "alignSelf": "flex-end",
                      "color": "#333333",
                      "flexGrow": 0,
                      "flexShrink": 1,
                      "fontSize": 16,
                      "lineHeight": 24,
                      "textAlign": "right",
                    },
                    {
                      "width": 28.799999999999997,
                    },
                  ]
                }
                testID="marker-box"
              >
                1. 
              </Text>
            </View>
            <View
              style={
                {
                  "color": "#333333",
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              <Text
                selectable={true}
                style={{}}
              >
                <Text
                  selectable={true}
                  style={
                    {
                      "color": "#333333",
                      "fontSize": 16,
                      "lineHeight": 24,
                    }
                  }
                >
                  Indented item1
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "flexDirection": "row",
                  "flexWrap": "nowrap",
                },
                undefined,
              ]
            }
            testID="marked-list-item"
          >
            <View>
              <Text
                style={
                  [
                    {
                      "alignSelf": "flex-end",
                      "color": "#333333",
                      "flexGrow": 0,
                      "flexShrink": 1,
                      "fontSize": 16,
                      "lineHeight": 24,
                      "textAlign": "right",
                    },
                    {
                      "width": 28.799999999999997,
                    },
                  ]
                }
                testID="marker-box"
              >
                2. 
              </Text>
            </View>
            <View
              style={
                {
                  "color": "#333333",
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              <Text
                selectable={true}
                style={{}}
              >
                <Text
                  selectable={true}
                  style={
                    {
                      "color": "#333333",
                      "fontSize": 16,
                      "lineHeight": 24,
                    }
                  }
                >
                  Indented item2
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 28.799999999999997,
                },
              ]
            }
            testID="marker-box"
          >
            4. 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Fourth item
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Lists Ordered Lists: With Start Offset 1`] = `
<RCTScrollView
  data={
    [
      {
        "items": [
          {
            "checked": undefined,
            "loose": false,
            "raw": "57. foo
",
            "task": false,
            "text": "foo",
            "tokens": [
              {
                "raw": "foo",
                "text": "foo",
                "tokens": [
                  {
                    "raw": "foo",
                    "text": "foo",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": false,
            "raw": "1. bar
",
            "task": false,
            "text": "bar",
            "tokens": [
              {
                "raw": "bar",
                "text": "bar",
                "tokens": [
                  {
                    "raw": "bar",
                    "text": "bar",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": false,
            "raw": "2. baz",
            "task": false,
            "text": "baz",
            "tokens": [
              {
                "raw": "baz",
                "text": "baz",
                "tokens": [
                  {
                    "raw": "baz",
                    "text": "baz",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
        ],
        "loose": false,
        "ordered": true,
        "raw": "57. foo
1. bar
2. baz",
        "start": 57,
        "type": "list",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 38.4,
                },
              ]
            }
            testID="marker-box"
          >
            57. 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              foo
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 38.4,
                },
              ]
            }
            testID="marker-box"
          >
            58. 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              bar
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 38.4,
                },
              ]
            }
            testID="marker-box"
          >
            59. 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              baz
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Lists Unordered Lists 1`] = `
<RCTScrollView
  data={
    [
      {
        "items": [
          {
            "checked": undefined,
            "loose": false,
            "raw": "- First item
",
            "task": false,
            "text": "First item",
            "tokens": [
              {
                "raw": "First item",
                "text": "First item",
                "tokens": [
                  {
                    "raw": "First item",
                    "text": "First item",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": false,
            "raw": "- Second item
",
            "task": false,
            "text": "Second item",
            "tokens": [
              {
                "raw": "Second item",
                "text": "Second item",
                "tokens": [
                  {
                    "raw": "Second item",
                    "text": "Second item",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": false,
            "raw": "- Third item
    - Indented item1
    - Indented item2
",
            "task": false,
            "text": "Third item
  - Indented item1
  - Indented item2",
            "tokens": [
              {
                "raw": "Third item
",
                "text": "Third item",
                "tokens": [
                  {
                    "raw": "Third item",
                    "text": "Third item",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
              {
                "items": [
                  {
                    "checked": undefined,
                    "loose": false,
                    "raw": "  - Indented item1
",
                    "task": false,
                    "text": "Indented item1",
                    "tokens": [
                      {
                        "raw": "Indented item1",
                        "text": "Indented item1",
                        "tokens": [
                          {
                            "raw": "Indented item1",
                            "text": "Indented item1",
                            "type": "text",
                          },
                        ],
                        "type": "text",
                      },
                    ],
                    "type": "list_item",
                  },
                  {
                    "checked": undefined,
                    "loose": false,
                    "raw": "  - Indented item2",
                    "task": false,
                    "text": "Indented item2",
                    "tokens": [
                      {
                        "raw": "Indented item2",
                        "text": "Indented item2",
                        "tokens": [
                          {
                            "raw": "Indented item2",
                            "text": "Indented item2",
                            "type": "text",
                          },
                        ],
                        "type": "text",
                      },
                    ],
                    "type": "list_item",
                  },
                ],
                "loose": false,
                "ordered": false,
                "raw": "  - Indented item1
  - Indented item2",
                "start": "",
                "type": "list",
              },
            ],
            "type": "list_item",
          },
          {
            "checked": undefined,
            "loose": false,
            "raw": "- Fourth item",
            "task": false,
            "text": "Fourth item",
            "tokens": [
              {
                "raw": "Fourth item",
                "text": "Fourth item",
                "tokens": [
                  {
                    "raw": "Fourth item",
                    "text": "Fourth item",
                    "type": "text",
                  },
                ],
                "type": "text",
              },
            ],
            "type": "list_item",
          },
        ],
        "loose": false,
        "ordered": false,
        "raw": "- First item
- Second item
- Third item
    - Indented item1
    - Indented item2
- Fourth item",
        "start": "",
        "type": "list",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 19.2,
                },
              ]
            }
            testID="marker-box"
          >
            • 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              First item
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 19.2,
                },
              ]
            }
            testID="marker-box"
          >
            • 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Second item
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 19.2,
                },
              ]
            }
            testID="marker-box"
          >
            • 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Third item
            </Text>
          </Text>
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "flexDirection": "row",
                  "flexWrap": "nowrap",
                },
                undefined,
              ]
            }
            testID="marked-list-item"
          >
            <View>
              <Text
                style={
                  [
                    {
                      "alignSelf": "flex-end",
                      "color": "#333333",
                      "flexGrow": 0,
                      "flexShrink": 1,
                      "fontSize": 16,
                      "lineHeight": 24,
                      "textAlign": "right",
                    },
                    {
                      "width": 19.2,
                    },
                  ]
                }
                testID="marker-box"
              >
                • 
              </Text>
            </View>
            <View
              style={
                {
                  "color": "#333333",
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              <Text
                selectable={true}
                style={{}}
              >
                <Text
                  selectable={true}
                  style={
                    {
                      "color": "#333333",
                      "fontSize": 16,
                      "lineHeight": 24,
                    }
                  }
                >
                  Indented item1
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "flexDirection": "row",
                  "flexWrap": "nowrap",
                },
                undefined,
              ]
            }
            testID="marked-list-item"
          >
            <View>
              <Text
                style={
                  [
                    {
                      "alignSelf": "flex-end",
                      "color": "#333333",
                      "flexGrow": 0,
                      "flexShrink": 1,
                      "fontSize": 16,
                      "lineHeight": 24,
                      "textAlign": "right",
                    },
                    {
                      "width": 19.2,
                    },
                  ]
                }
                testID="marker-box"
              >
                • 
              </Text>
            </View>
            <View
              style={
                {
                  "color": "#333333",
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              <Text
                selectable={true}
                style={{}}
              >
                <Text
                  selectable={true}
                  style={
                    {
                      "color": "#333333",
                      "fontSize": 16,
                      "lineHeight": 24,
                    }
                  }
                >
                  Indented item2
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          [
            {
              "alignSelf": "stretch",
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            undefined,
          ]
        }
        testID="marked-list-item"
      >
        <View>
          <Text
            style={
              [
                {
                  "alignSelf": "flex-end",
                  "color": "#333333",
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "right",
                },
                {
                  "width": 19.2,
                },
              ]
            }
            testID="marker-box"
          >
            • 
          </Text>
        </View>
        <View
          style={
            {
              "color": "#333333",
              "flexShrink": 1,
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={{}}
          >
            <Text
              selectable={true}
              style={
                {
                  "color": "#333333",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              Fourth item
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Paragraphs Paragraph 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "I really like using Markdown.",
        "text": "I really like using Markdown.",
        "tokens": [
          {
            "raw": "I really like using Markdown.",
            "text": "I really like using Markdown.",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
      {
        "raw": "

",
        "type": "space",
      },
      {
        "raw": "I think I'll use it to format all of my documents from now on.",
        "text": "I think I'll use it to format all of my documents from now on.",
        "tokens": [
          {
            "raw": "I think I'll use it to format all of my documents from now on.",
            "text": "I think I&#39;ll use it to format all of my documents from now on.",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            I really like using Markdown.
          </Text>
        </Text>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            I think I'll use it to format all of my documents from now on.
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Paragraphs Paragraph with Image 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "Here, I'll guide you through sending desktop notifications to offline users when they have new chat messages.![Chat](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kq947hwxmjvlmhrbnm6.png)",
        "text": "Here, I'll guide you through sending desktop notifications to offline users when they have new chat messages.![Chat](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kq947hwxmjvlmhrbnm6.png)",
        "tokens": [
          {
            "raw": "Here, I'll guide you through sending desktop notifications to offline users when they have new chat messages.",
            "text": "Here, I&#39;ll guide you through sending desktop notifications to offline users when they have new chat messages.",
            "type": "text",
          },
          {
            "href": "https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kq947hwxmjvlmhrbnm6.png",
            "raw": "![Chat](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kq947hwxmjvlmhrbnm6.png)",
            "text": "Chat",
            "title": null,
            "type": "image",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={
            {
              "color": "#333333",
              "fontSize": 16,
              "lineHeight": 24,
            }
          }
        >
          <Text
            selectable={true}
            style={
              {
                "color": "#333333",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            Here, I'll guide you through sending desktop notifications to offline users when they have new chat messages.
          </Text>
        </Text>
        <View
          accessibilityIgnoresInvertColors={true}
          style={
            {
              "aspectRatio": undefined,
              "width": "100%",
            }
          }
        >
          <Image
            accessibilityLabel="Chat"
            accessibilityRole="image"
            source={
              {
                "uri": "https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kq947hwxmjvlmhrbnm6.png",
              }
            }
            style={
              [
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "height": undefined,
                  "width": "100%",
                },
                {
                  "resizeMode": "cover",
                },
              ]
            }
            testID="react-native-marked-md-image"
          />
          <ActivityIndicator
            size="small"
            testID="react-native-marked-md-image-activity-indicator"
          />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Renderer override Custom 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "\`hello\`",
        "text": "\`hello\`",
        "tokens": [
          {
            "raw": "\`hello\`",
            "text": "hello",
            "type": "codespan",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            style={
              {
                "color": "#ff0000",
              }
            }
          >
            hello
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Tables Alignment 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "
",
        "type": "space",
      },
      {
        "align": [
          "left",
          "center",
          "right",
        ],
        "header": [
          {
            "text": "Syntax",
            "tokens": [
              {
                "raw": "Syntax",
                "text": "Syntax",
                "type": "text",
              },
            ],
          },
          {
            "text": "Description",
            "tokens": [
              {
                "raw": "Description",
                "text": "Description",
                "type": "text",
              },
            ],
          },
          {
            "text": "Test Text",
            "tokens": [
              {
                "raw": "Test Text",
                "text": "Test Text",
                "type": "text",
              },
            ],
          },
        ],
        "raw": "| Syntax      | Description | Test Text     |
| :---        |    :----:   |          ---: |
| Header      | Title       | Here's this   |
| Paragraph   | Text        | And more      |
",
        "rows": [
          [
            {
              "text": "Header",
              "tokens": [
                {
                  "raw": "Header",
                  "text": "Header",
                  "type": "text",
                },
              ],
            },
            {
              "text": "Title",
              "tokens": [
                {
                  "raw": "Title",
                  "text": "Title",
                  "type": "text",
                },
              ],
            },
            {
              "text": "Here's this",
              "tokens": [
                {
                  "raw": "Here's this",
                  "text": "Here&#39;s this",
                  "type": "text",
                },
              ],
            },
          ],
          [
            {
              "text": "Paragraph",
              "tokens": [
                {
                  "raw": "Paragraph",
                  "text": "Paragraph",
                  "type": "text",
                },
              ],
            },
            {
              "text": "Text",
              "tokens": [
                {
                  "raw": "Text",
                  "text": "Text",
                  "type": "text",
                },
              ],
            },
            {
              "text": "And more",
              "tokens": [
                {
                  "raw": "And more",
                  "text": "And more",
                  "type": "text",
                },
              ],
            },
          ],
        ],
        "type": "table",
      },
      {
        "raw": "                ",
        "type": "space",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <RCTScrollView
        horizontal={true}
      >
        <View>
          <View
            style={
              [
                {},
                {
                  "borderBottomWidth": 1,
                  "borderColor": "#d0d7de",
                  "borderLeftWidth": 1,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Syntax
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    Description
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "right",
                      }
                    }
                  >
                    Test Text
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Header
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    Title
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "right",
                      }
                    }
                  >
                    Here's this
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Paragraph
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    Text
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "right",
                      }
                    }
                  >
                    And more
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
  </View>
</RCTScrollView>
`;

exports[`Tables Basic 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "
",
        "type": "space",
      },
      {
        "align": [
          null,
          null,
        ],
        "header": [
          {
            "text": "Syntax",
            "tokens": [
              {
                "raw": "Syntax",
                "text": "Syntax",
                "type": "text",
              },
            ],
          },
          {
            "text": "Description",
            "tokens": [
              {
                "raw": "Description",
                "text": "Description",
                "type": "text",
              },
            ],
          },
        ],
        "raw": "| Syntax      | Description |
| ----------- | ----------- |
| Header      | Title       |
| Paragraph   | Text        |
",
        "rows": [
          [
            {
              "text": "Header",
              "tokens": [
                {
                  "raw": "Header",
                  "text": "Header",
                  "type": "text",
                },
              ],
            },
            {
              "text": "Title",
              "tokens": [
                {
                  "raw": "Title",
                  "text": "Title",
                  "type": "text",
                },
              ],
            },
          ],
          [
            {
              "text": "Paragraph",
              "tokens": [
                {
                  "raw": "Paragraph",
                  "text": "Paragraph",
                  "type": "text",
                },
              ],
            },
            {
              "text": "Text",
              "tokens": [
                {
                  "raw": "Text",
                  "text": "Text",
                  "type": "text",
                },
              ],
            },
          ],
        ],
        "type": "table",
      },
      {
        "raw": "                ",
        "type": "space",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <RCTScrollView
        horizontal={true}
      >
        <View>
          <View
            style={
              [
                {},
                {
                  "borderBottomWidth": 1,
                  "borderColor": "#d0d7de",
                  "borderLeftWidth": 1,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Syntax
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Description
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Header
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Title
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Paragraph
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Text
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
  </View>
</RCTScrollView>
`;

exports[`Tables Different Cell Widths 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "
",
        "type": "space",
      },
      {
        "align": [
          null,
          null,
        ],
        "header": [
          {
            "text": "Syntax",
            "tokens": [
              {
                "raw": "Syntax",
                "text": "Syntax",
                "type": "text",
              },
            ],
          },
          {
            "text": "Description",
            "tokens": [
              {
                "raw": "Description",
                "text": "Description",
                "type": "text",
              },
            ],
          },
        ],
        "raw": "| Syntax | Description |
| --- | ----------- |
| Header | Title |
| Paragraph | Text |
",
        "rows": [
          [
            {
              "text": "Header",
              "tokens": [
                {
                  "raw": "Header",
                  "text": "Header",
                  "type": "text",
                },
              ],
            },
            {
              "text": "Title",
              "tokens": [
                {
                  "raw": "Title",
                  "text": "Title",
                  "type": "text",
                },
              ],
            },
          ],
          [
            {
              "text": "Paragraph",
              "tokens": [
                {
                  "raw": "Paragraph",
                  "text": "Paragraph",
                  "type": "text",
                },
              ],
            },
            {
              "text": "Text",
              "tokens": [
                {
                  "raw": "Text",
                  "text": "Text",
                  "type": "text",
                },
              ],
            },
          ],
        ],
        "type": "table",
      },
      {
        "raw": "                ",
        "type": "space",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <RCTScrollView
        horizontal={true}
      >
        <View>
          <View
            style={
              [
                {},
                {
                  "borderBottomWidth": 1,
                  "borderColor": "#d0d7de",
                  "borderLeftWidth": 1,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Syntax
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Description
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Header
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Title
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Paragraph
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Text
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
  </View>
</RCTScrollView>
`;

exports[`Tables Emphasis, Code, Links 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "
",
        "type": "space",
      },
      {
        "align": [
          null,
          "center",
        ],
        "header": [
          {
            "text": "_This will also be italic_",
            "tokens": [
              {
                "raw": "_This will also be italic_",
                "text": "This will also be italic",
                "tokens": [
                  {
                    "raw": "This will also be italic",
                    "text": "This will also be italic",
                    "type": "text",
                  },
                ],
                "type": "em",
              },
            ],
          },
          {
            "text": "_You **can** combine them_",
            "tokens": [
              {
                "raw": "_You **can** combine them_",
                "text": "You **can** combine them",
                "tokens": [
                  {
                    "raw": "You ",
                    "text": "You ",
                    "type": "text",
                  },
                  {
                    "raw": "**can**",
                    "text": "can",
                    "tokens": [
                      {
                        "raw": "can",
                        "text": "can",
                        "type": "text",
                      },
                    ],
                    "type": "strong",
                  },
                  {
                    "raw": " combine them",
                    "text": " combine them",
                    "type": "text",
                  },
                ],
                "type": "em",
              },
            ],
          },
        ],
        "raw": "| _This will also be italic_ |      _You **can** combine them_       |
| -------------------------- | :-----------------------------------: |
| **left foo**               |              _right foo_              |
| \`left bar\`               |               right bar               |
| ~~left baz~~               | right [link](https://duckduckgo.com). |
",
        "rows": [
          [
            {
              "text": "**left foo**",
              "tokens": [
                {
                  "raw": "**left foo**",
                  "text": "left foo",
                  "tokens": [
                    {
                      "raw": "left foo",
                      "text": "left foo",
                      "type": "text",
                    },
                  ],
                  "type": "strong",
                },
              ],
            },
            {
              "text": "_right foo_",
              "tokens": [
                {
                  "raw": "_right foo_",
                  "text": "right foo",
                  "tokens": [
                    {
                      "raw": "right foo",
                      "text": "right foo",
                      "type": "text",
                    },
                  ],
                  "type": "em",
                },
              ],
            },
          ],
          [
            {
              "text": "\`left bar\`",
              "tokens": [
                {
                  "raw": "\`left bar\`",
                  "text": "left bar",
                  "type": "codespan",
                },
              ],
            },
            {
              "text": "right bar",
              "tokens": [
                {
                  "raw": "right bar",
                  "text": "right bar",
                  "type": "text",
                },
              ],
            },
          ],
          [
            {
              "text": "~~left baz~~",
              "tokens": [
                {
                  "raw": "~~left baz~~",
                  "text": "left baz",
                  "tokens": [
                    {
                      "raw": "left baz",
                      "text": "left baz",
                      "type": "text",
                    },
                  ],
                  "type": "del",
                },
              ],
            },
            {
              "text": "right [link](https://duckduckgo.com).",
              "tokens": [
                {
                  "raw": "right ",
                  "text": "right ",
                  "type": "text",
                },
                {
                  "href": "https://duckduckgo.com",
                  "raw": "[link](https://duckduckgo.com)",
                  "text": "link",
                  "title": null,
                  "tokens": [
                    {
                      "raw": "link",
                      "text": "link",
                      "type": "text",
                    },
                  ],
                  "type": "link",
                },
                {
                  "raw": ".",
                  "text": ".",
                  "type": "text",
                },
              ],
            },
          ],
        ],
        "type": "table",
      },
      {
        "raw": "                ",
        "type": "space",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <RCTScrollView
        horizontal={true}
      >
        <View>
          <View
            style={
              [
                {},
                {
                  "borderBottomWidth": 1,
                  "borderColor": "#d0d7de",
                  "borderLeftWidth": 1,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "fontStyle": "italic",
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    <Text
                      selectable={true}
                      style={
                        {
                          "color": "#333333",
                          "fontSize": 16,
                          "fontStyle": "italic",
                          "lineHeight": 24,
                          "textAlign": "left",
                        }
                      }
                    >
                      This will also be italic
                    </Text>
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "fontStyle": "italic",
                        "lineHeight": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    <Text
                      selectable={true}
                      style={
                        {
                          "color": "#333333",
                          "fontSize": 16,
                          "fontStyle": "italic",
                          "lineHeight": 24,
                          "textAlign": "center",
                        }
                      }
                    >
                      You 
                    </Text>
                    <Text
                      selectable={true}
                      style={
                        {
                          "color": "#333333",
                          "fontSize": 16,
                          "fontStyle": "italic",
                          "fontWeight": "bold",
                          "lineHeight": 24,
                          "textAlign": "center",
                        }
                      }
                    >
                      <Text
                        selectable={true}
                        style={
                          {
                            "color": "#333333",
                            "fontSize": 16,
                            "fontStyle": "italic",
                            "fontWeight": "bold",
                            "lineHeight": 24,
                            "textAlign": "center",
                          }
                        }
                      >
                        can
                      </Text>
                    </Text>
                    <Text
                      selectable={true}
                      style={
                        {
                          "color": "#333333",
                          "fontSize": 16,
                          "fontStyle": "italic",
                          "lineHeight": 24,
                          "textAlign": "center",
                        }
                      }
                    >
                       combine them
                    </Text>
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "fontWeight": "bold",
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    <Text
                      selectable={true}
                      style={
                        {
                          "color": "#333333",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "lineHeight": 24,
                          "textAlign": "left",
                        }
                      }
                    >
                      left foo
                    </Text>
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "fontStyle": "italic",
                        "lineHeight": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    <Text
                      selectable={true}
                      style={
                        {
                          "color": "#333333",
                          "fontSize": 16,
                          "fontStyle": "italic",
                          "lineHeight": 24,
                          "textAlign": "center",
                        }
                      }
                    >
                      right foo
                    </Text>
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "backgroundColor": "#f6f8fa",
                        "color": "#333333",
                        "fontSize": 16,
                        "fontStyle": "italic",
                        "fontWeight": "300",
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    left bar
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    right bar
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                        "textDecorationLine": "line-through",
                        "textDecorationStyle": "solid",
                      }
                    }
                  >
                    <Text
                      selectable={true}
                      style={
                        {
                          "color": "#333333",
                          "fontSize": 16,
                          "lineHeight": 24,
                          "textAlign": "left",
                          "textDecorationLine": "line-through",
                          "textDecorationStyle": "solid",
                        }
                      }
                    >
                      left baz
                    </Text>
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    right 
                  </Text>
                  <Text
                    accessibilityHint="Opens in a new window"
                    accessibilityRole="link"
                    onPress={[Function]}
                    selectable={true}
                    style={
                      {
                        "color": "#58a6ff",
                        "fontSize": 16,
                        "fontStyle": "italic",
                        "lineHeight": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    <Text
                      selectable={true}
                      style={
                        {
                          "color": "#58a6ff",
                          "fontSize": 16,
                          "fontStyle": "italic",
                          "lineHeight": 24,
                          "textAlign": "center",
                        }
                      }
                    >
                      link
                    </Text>
                  </Text>
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    .
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
  </View>
</RCTScrollView>
`;

exports[`Tables Images 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "
",
        "type": "space",
      },
      {
        "align": [
          "center",
        ],
        "header": [
          {
            "text": "Hello",
            "tokens": [
              {
                "raw": "Hello",
                "text": "Hello",
                "type": "text",
              },
            ],
          },
        ],
        "raw": "|                                Hello                                |
| :-----------------------------------------------------------------: |
| Bingo ![](https://goo.gl/1R3T6h "Tonejito") This also works for me. |
",
        "rows": [
          [
            {
              "text": "Bingo ![](https://goo.gl/1R3T6h "Tonejito") This also works for me.",
              "tokens": [
                {
                  "raw": "Bingo ",
                  "text": "Bingo ",
                  "type": "text",
                },
                {
                  "href": "https://goo.gl/1R3T6h",
                  "raw": "![](https://goo.gl/1R3T6h "Tonejito")",
                  "text": "",
                  "title": "Tonejito",
                  "type": "image",
                },
                {
                  "raw": " This also works for me.",
                  "text": " This also works for me.",
                  "type": "text",
                },
              ],
            },
          ],
        ],
        "type": "table",
      },
      {
        "raw": "                ",
        "type": "space",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <RCTScrollView
        horizontal={true}
      >
        <View>
          <View
            style={
              [
                {},
                {
                  "borderBottomWidth": 1,
                  "borderColor": "#d0d7de",
                  "borderLeftWidth": 1,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    Hello
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    Bingo 
                  </Text>
                  <View
                    accessibilityIgnoresInvertColors={true}
                    style={
                      {
                        "aspectRatio": undefined,
                        "width": "100%",
                      }
                    }
                  >
                    <Image
                      accessibilityLabel="Tonejito"
                      accessibilityRole="image"
                      source={
                        {
                          "uri": "https://goo.gl/1R3T6h",
                        }
                      }
                      style={
                        [
                          {
                            "bottom": 0,
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          },
                          {
                            "height": undefined,
                            "width": "100%",
                          },
                          {
                            "resizeMode": "cover",
                          },
                        ]
                      }
                      testID="react-native-marked-md-image"
                    />
                    <ActivityIndicator
                      size="small"
                      testID="react-native-marked-md-image-activity-indicator"
                    />
                  </View>
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                     This also works for me.
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
  </View>
</RCTScrollView>
`;

exports[`Tables Pipe Character 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "
",
        "type": "space",
      },
      {
        "align": [
          "left",
          "center",
          "right",
        ],
        "header": [
          {
            "text": "Syntax",
            "tokens": [
              {
                "raw": "Syntax",
                "text": "Syntax",
                "type": "text",
              },
            ],
          },
          {
            "text": "Description",
            "tokens": [
              {
                "raw": "Description",
                "text": "Description",
                "type": "text",
              },
            ],
          },
          {
            "text": "Test Text",
            "tokens": [
              {
                "raw": "Test Text",
                "text": "Test Text",
                "type": "text",
              },
            ],
          },
        ],
        "raw": "| Syntax    | Description |       Test Text |
| :-------- | :---------: | --------------: |
| Header    |    Title    | Here's \\| this |
| Paragraph |    Text     |        And more |
",
        "rows": [
          [
            {
              "text": "Header",
              "tokens": [
                {
                  "raw": "Header",
                  "text": "Header",
                  "type": "text",
                },
              ],
            },
            {
              "text": "Title",
              "tokens": [
                {
                  "raw": "Title",
                  "text": "Title",
                  "type": "text",
                },
              ],
            },
            {
              "text": "Here's | this",
              "tokens": [
                {
                  "raw": "Here's | this",
                  "text": "Here&#39;s | this",
                  "type": "text",
                },
              ],
            },
          ],
          [
            {
              "text": "Paragraph",
              "tokens": [
                {
                  "raw": "Paragraph",
                  "text": "Paragraph",
                  "type": "text",
                },
              ],
            },
            {
              "text": "Text",
              "tokens": [
                {
                  "raw": "Text",
                  "text": "Text",
                  "type": "text",
                },
              ],
            },
            {
              "text": "And more",
              "tokens": [
                {
                  "raw": "And more",
                  "text": "And more",
                  "type": "text",
                },
              ],
            },
          ],
        ],
        "type": "table",
      },
      {
        "raw": "                ",
        "type": "space",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <RCTScrollView
        horizontal={true}
      >
        <View>
          <View
            style={
              [
                {},
                {
                  "borderBottomWidth": 1,
                  "borderColor": "#d0d7de",
                  "borderLeftWidth": 1,
                },
              ]
            }
          >
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Syntax
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    Description
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "right",
                      }
                    }
                  >
                    Test Text
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Header
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    Title
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "right",
                      }
                    }
                  >
                    Here's | this
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "left",
                      }
                    }
                  >
                    Paragraph
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    Text
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {
                      "borderColor": "#d0d7de",
                      "borderRightWidth": 1,
                      "borderTopWidth": 1,
                    },
                    {
                      "justifyContent": "center",
                    },
                    {
                      "width": 325,
                    },
                    undefined,
                    undefined,
                    false,
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "padding": 4,
                    }
                  }
                >
                  <Text
                    selectable={true}
                    style={
                      {
                        "color": "#333333",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "textAlign": "right",
                      }
                    }
                  >
                    And more
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
  </View>
</RCTScrollView>
`;

exports[`Tokenizer Custom 1`] = `
<RCTScrollView
  data={
    [
      {
        "raw": "$ latex code $",
        "text": "$ latex code $",
        "tokens": [
          {
            "args": {
              "text": "latex code",
            },
            "identifier": "latex",
            "raw": "$ latex code $",
            "type": "custom",
          },
        ],
        "type": "paragraph",
      },
      {
        "raw": "

",
        "type": "space",
      },
      {
        "raw": "\`hello\`",
        "text": "\`hello\`",
        "tokens": [
          {
            "raw": "\`hello\`",
            "text": "hello",
            "type": "codespan",
          },
        ],
        "type": "paragraph",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={8}
  keyExtractor={[Function]}
  maxToRenderPerBatch={8}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
  style={
    {
      "backgroundColor": "#ffffff",
    }
  }
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text>
            latex code
          </Text>
        </Text>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#333333",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          selectable={true}
          style={{}}
        >
          <Text
            style={
              {
                "color": "#ff0000",
              }
            }
          >
            hello
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
